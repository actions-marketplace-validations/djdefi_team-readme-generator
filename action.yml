name: 'Team README updater'
description: 'This action updates the README.md file with a table of team members'
branding:
  icon: 'users'  
  color: 'green'

inputs:
  org:
    description: 'The organization to get the team members from'
    required: true
    default: 'es-na-battlesnake'
  team:
    description: 'The team to get the members from'
    required: true
    default: 'snake-ops'

runs:
    using: "composite"
    steps:
      - uses: actions/github-script@v6
        with:
          result-encoding: string
          script: |
            // Get the list of members on the team
            const members = await github.rest.teams.listMembersInOrg({
              org: "${{ inputs.org }}",
              team_slug: "${{ inputs.team }}",
            });
            // Log the list of members to the console
            console.log("Members output:");
            console.log(members);
            console.log(members.data);
            // For each member returned, use the user api to get their login, avatar, location, and bio
            const memberData = await Promise.all(members.data.map(async (member) => {
              const user = await github.rest.users.getByUsername({
                username: member.login
              });
              // Log the user data to the console
              console.log("User output:");
              console.log(user);
              console.log(user.data);
              return user.data;
            }));
            // Log the member data to the console
            console.log("MemberData output:");
            console.log(memberData);
            // Create a markdown table with the member data
            const table = memberData.map((member) => {
              return `| <img src="${member.avatar_url}" width="30" /> | @${member.login} | ${member.location} | ${member.bio} |`;
            }).join("\n");
            // Log the table to the console
            console.log("Table output:");
            console.log(table);
            // Add headers to the table
            const tableWithHeaders = `| ðŸ‘¤ | Username | Location | Bio |\n| --- | --- | --- | --- |\n${table}`;
            // Log the table with headers to the console
            console.log("Table with headers output:");
            console.log(tableWithHeaders);
            // Get the README file of the current repo context and its contents
            // Add the table to the README following the "<!--auto-team-table-->" comment if the table content has changed
            const readme = await github.rest.repos.getReadme({
              owner: context.repo.owner,
              repo: context.repo.repo,
              ref: context.ref
            });
            const readmeContent = Buffer.from(readme.data.content, "base64").toString();
            const tableComment = "<!--auto-team-table-->";
            const tableStart = readmeContent.indexOf(tableComment) + tableComment.length;
            const tableEnd = readmeContent.indexOf("<!--/auto-team-table-->");
            const readmeContentBeforeTable = readmeContent.substring(0, tableStart);
            const readmeContentAfterTable = readmeContent.substring(tableEnd);
            const newReadmeContent = `${readmeContentBeforeTable}\n${tableWithHeaders}\n${readmeContentAfterTable}`;
            // Log the newReadmeContent
            console.log("New README content:");
            console.log(newReadmeContent);
            // If the newReadmeContent is different from the current README content, commit the new README content to the new branch
            // Create a blob with the updated README
            if (newReadmeContent !== readmeContent) {
              console.log("Updating README");
              // Create a new branch new branch with a unique name based on the first 7 characters of the commit SHA for the README update and commit the updated README
              const branch = await github.rest.git.createRef({
                owner: context.repo.owner,
                repo: context.repo.repo,
                ref: `refs/heads/update-team-readme-${context.sha.slice(0, 7)}`,
                sha: context.sha
              });
              // Log the branch to the console
              console.log("Branch output:");
              console.log(branch);
              const blob = await github.rest.git.createBlob({
                owner: context.repo.owner,
                repo: context.repo.repo,
                content: newReadmeContent,
                encoding: "utf-8"
              });
              // Log the blob to the console
              console.log("Blob output:");
              console.log(blob);
              // Create a tree with the updated README
              const tree = await github.rest.git.createTree({
                owner: context.repo.owner,
                repo: context.repo.repo,
                tree: [
                  {
                    path: "README.md",
                    mode: "100644",
                    type: "blob",
                    sha: blob.data.sha
                  }
                ],
                base_tree: context.sha
              });
              // Log the tree to the console 
              console.log("Tree output:");
              console.log(tree);
              // Create a commit with the updated README
              const commit = await github.rest.git.createCommit({
                owner: context.repo.owner,
                repo: context.repo.repo,
                message: "Update team README",
                tree: tree.data.sha,
                parents: [context.sha]
              });
              // Log the commit to the console
              console.log("Commit output:");
              console.log(commit);
              // Push the commit to the new branch with a unique name based on the first 7 characters of the commit SHA
              const push = await github.rest.git.updateRef({
                owner: context.repo.owner,
                repo: context.repo.repo,
                ref: `heads/update-team-readme-${context.sha.slice(0, 7)}`,
                sha: commit.data.sha
              });
              // Log the push to the console
              console.log("Push output:");
              console.log(push);
              // Create a pull request with the new branch
              const pullRequest = await github.rest.pulls.create({
                owner: context.repo.owner,
                repo: context.repo.repo,
                title: "Update team README",
                // Use the table as the description
                body: "Auto-generated table of team members:\n\n" + tableWithHeaders,
                head: `update-team-readme-${context.sha.slice(0, 7)}`,
                base: "main"
              });
              // Log the pull request to the console
              console.log("Pull request output:");
              console.log(pullRequest);
              // Return the pull request number
              return pullRequest.data.number;
            }
